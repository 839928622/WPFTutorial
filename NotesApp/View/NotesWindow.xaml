<Window x:Class="NotesApp.View.NotesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NotesApp.View"
        xmlns:vm="clr-namespace:NotesApp.ViewModel"
        mc:Ignorable="d"
        Title="NotesWindow" Height="450" Width="800">
    <Window.Resources>
        <vm:NotesVM x:Key="viewModel"></vm:NotesVM>
    </Window.Resources>
    <DockPanel DataContext="{StaticResource viewModel}">
        <Menu DockPanel.Dock="Top"> <!--首先menu的Dock是top，效果就是相对于其他元素，将占用一整行顶部空间-->
            <MenuItem Header="文件">
                <MenuItem Header="新合集" Command="{Binding NewNotebookCommand}"></MenuItem>
                <MenuItem Header="新笔记" Command="{Binding NewNoteCommand}" CommandParameter="{Binding SelectedNotebook}"></MenuItem> <!--因为新笔记按钮，必须选中一个新合集-->
                <Separator></Separator>
                <MenuItem Header="退出" Click="Exit_Application"></MenuItem>
            </MenuItem>
         <!--在这里复制menuItem即可增加顶部菜单-->
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock x:Name="AmountOfContent"/> <!--用于记录富文本字数-->
            </StatusBarItem>
        </StatusBar>
        <!--笔记合集-->
        <ListView DockPanel.Dock="Left" Width="140" 
                  ItemsSource="{Binding Notebooks}"
                  SelectedItem="{Binding SelectedNotebook,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate> <!--这里定义我们list里的每一条数据应该以什么方式显示-->
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/> <!--这里我们选择显示Notebook属性（对向）里的Name-->
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <!--笔记-->
        <ListView DockPanel.Dock="Left" Width="140" ItemsSource="{Binding Notes}">
            <ListView.ItemTemplate>
                <!--这里定义我们list里的每一条数据应该以什么方式显示-->
                <DataTemplate>
                    <TextBlock Text="{Binding Title}"/>
                    <!--这里我们选择显示Notebook属性（对象）里的Name-->
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <ToggleButton Content="语音转文字" Click="SpeechButton_Click"></ToggleButton>
                <ToggleButton x:Name="boldButton" Click="boldButton_Click">
                    <TextBlock Text="B" FontWeight="Bold"></TextBlock></ToggleButton>
                <ToggleButton x:Name="ItalicButton" Click="ItalicButton_Click">
                    <TextBlock Text="I"  FontStyle="Italic"></TextBlock>
                </ToggleButton>
                <ToggleButton x:Name="UnderlineButton" Click="UnderlineButton_Click">
                    <TextBlock Text="U" TextDecorations="Underline"></TextBlock>
                </ToggleButton>
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <RichTextBox x:Name="NoteContent" TextChanged="RichTextBox_OnTextChanged" SelectionChanged="RichTextBox_OnSelectionChanged"></RichTextBox>
        </Grid>
       
    </DockPanel>
</Window>
